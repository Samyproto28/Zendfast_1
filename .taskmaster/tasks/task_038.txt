# Task ID: 38
# Title: Implementar tema claro/oscuro con toggle del sistema
# Status: pending
# Dependencies: 1
# Priority: low
# Description: Desarrollar soporte completo para temas claro y oscuro con detección automática del sistema y toggle manual
# Details:
Crear ZendfastTheme.lightTheme y ZendfastTheme.darkTheme usando Material 3 ColorScheme. Dark theme: surface #1E1E1E, background #121212, manteniendo brand colors teal/green. Implementar ThemeModeProvider (light/dark/system) con persistence en SharedPreferences. Crear ThemeToggle widget con SegmentedButton. Verificar legibilidad en ambos themes, especialmente timer display y panic button.

# Test Strategy:
Verificar theme persiste tras restart, probar auto-detection sistema funciona, validar legibilidad ambos themes

# Subtasks:
## 1. Crear esquemas de colores Material 3 para temas claro y oscuro [pending]
### Dependencies: None
### Description: Implementar ZendfastTheme.lightTheme y ZendfastTheme.darkTheme usando Material 3 ColorScheme con los colores específicos definidos
### Details:
Crear clase ZendfastTheme con propiedades lightTheme y darkTheme. Dark theme debe usar surface #1E1E1E, background #121212, manteniendo brand colors teal/green. Light theme usar colores Material 3 por defecto con brand colors personalizados. Configurar todos los tokens de color necesarios para consistencia visual.

## 2. Implementar ThemeModeProvider con persistencia en SharedPreferences [pending]
### Dependencies: 38.1
### Description: Desarrollar provider para gestionar estado del tema (light/dark/system) con almacenamiento persistente
### Details:
Crear ThemeModeProvider usando Riverpod que maneje tres estados: light, dark, system. Implementar persistencia con SharedPreferences para mantener preferencia del usuario entre sesiones. Incluir detección automática del tema del sistema y actualización reactiva cuando el usuario cambia tema en configuración del dispositivo.

## 3. Crear widget ThemeToggle con SegmentedButton y verificar legibilidad [pending]
### Dependencies: 38.2
### Description: Desarrollar interfaz de usuario para alternar entre temas y validar legibilidad en ambos modos
### Details:
Crear ThemeToggle widget usando SegmentedButton con opciones Claro/Oscuro/Sistema. Integrar con ThemeModeProvider para cambios reactivos. Realizar pruebas exhaustivas de legibilidad especialmente en timer display y panic button. Ajustar colores si es necesario para mantener accesibilidad.


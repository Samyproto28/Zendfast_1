# Task ID: 50
# Title: Crear suite de testing E2E completa
# Status: pending
# Dependencies: None
# Priority: medium
# Description: Desarrollar pruebas end-to-end cubriendo flujos críticos de usuario con integration_test
# Details:
Usar integration_test package para E2E tests. Cubrir critical paths: onboarding flow completo, start/complete fast, panic button durante ayuno, water logging, session completion con metrics update. Test offline scenarios: app funciona sin internet, sync recovery on reconnect. Mock external services (Supabase, OneSignal) para deterministic testing. Run en CI con emulators.

# Test Strategy:
Ejecutar E2E tests en CI pipeline, verificar critical paths covered, probar offline functionality

# Subtasks:
## 1. Configurar framework de testing E2E con integration_test [pending]
### Dependencies: None
### Description: Instalar y configurar el package integration_test de Flutter para ejecutar pruebas end-to-end con emuladores
### Details:
Agregar integration_test dependency al pubspec.yaml. Crear directorio integration_test/ con estructura básica. Configurar test runner para Android y iOS emulators. Implementar helper functions para navigation, form filling, y assertions. Configurar CI pipeline para ejecutar tests automáticamente con emulators.

## 2. Implementar tests de flujos críticos de usuario [pending]
### Dependencies: 50.1
### Description: Crear pruebas E2E para onboarding, inicio/finalización de ayuno, botón de pánico, logging de agua y completion de sesiones
### Details:
Desarrollar test cases para: onboarding flow completo desde registro hasta primera sesión, start/complete fast workflow con timers, panic button durante ayuno activo, water logging functionality, session completion con metrics update. Implementar page objects pattern para maintainability. Usar realistic test data y user scenarios.

## 3. Implementar testing offline y mocking de servicios externos [pending]
### Dependencies: 50.2
### Description: Crear tests para funcionalidad offline y mock de Supabase/OneSignal para pruebas determinísticas
### Details:
Implementar tests offline: app funciona sin internet, data persiste localmente, sync recovery cuando reconnect. Mock Supabase responses para authentication, data sync, y RLS policies. Mock OneSignal para push notifications testing. Crear deterministic test scenarios con controlled network conditions. Implementar network simulation para edge cases.


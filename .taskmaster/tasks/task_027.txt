# Task ID: 27
# Title: Crear LearningHomeScreen para exploración de contenido
# Status: pending
# Dependencies: 26
# Priority: medium
# Description: Desarrollar pantalla principal de aprendizaje con navegación por categorías y contenido featured
# Details:
Crear LearningHomeScreen con TabBar para categories: Básicos, Ciencia, Tips, Historias Éxito. Implementar ContentListView con ContentCard widgets mostrando thumbnail, title, duration, premium badge. Agregar search bar en app bar. Featured content section en top. Pull-to-refresh para update content. Manejar empty states y loading states elegantemente.

# Test Strategy:
Verificar navigation entre tabs funciona, probar pull-to-refresh, validar empty states y loading states

# Subtasks:
## 1. Crear estructura base de LearningHomeScreen con TabBar [pending]
### Dependencies: None
### Description: Implementar la pantalla principal de aprendizaje con navegación por pestañas para las categorías: Básicos, Ciencia, Tips, Historias de Éxito
### Details:
Crear LearningHomeScreen como StatefulWidget. Implementar TabBar con 4 tabs: Básicos, Ciencia, Tips, Historias Éxito. Configurar TabController y TabBarView. Agregar AppBar con título 'Aprendizaje' y integrar search bar. Establecer estructura base del layout con TabBar en la parte superior y contenido dinámico en TabBarView.

## 2. Implementar ContentListView y ContentCard widgets [pending]
### Dependencies: 27.1
### Description: Desarrollar componentes reutilizables para mostrar listas de contenido con cards que incluyan thumbnail, título, duración y badge premium
### Details:
Crear ContentCard widget que muestre: thumbnail (NetworkImage con placeholder), título del contenido, duración formateada, premium badge condicional. Implementar ContentListView que use ListView.builder para renderizar ContentCards. Agregar padding y spacing apropiados. Manejar tap gestures en cards para navegación. Optimizar performance con const constructors donde sea posible.

## 3. Agregar featured content section y estados de loading/empty [pending]
### Dependencies: 27.2
### Description: Implementar sección de contenido destacado en la parte superior y manejar estados vacíos y de carga con pull-to-refresh
### Details:
Crear FeaturedContentSection como widget separado que muestre contenido destacado en un carousel horizontal. Implementar RefreshIndicator wrapper para pull-to-refresh functionality. Crear EmptyStateWidget para cuando no hay contenido disponible. Implementar LoadingStateWidget con shimmer effects durante carga. Agregar logic para alternar entre estados según data availability.


# Task ID: 17
# Title: Desarrollar servicio de hidratación (HydrationService)
# Status: pending
# Dependencies: 16
# Priority: medium
# Description: Implementar lógica para tracking de ingesta de agua, metas diarias y cálculo de progreso
# Details:
Crear HydrationService con métodos: logWater(amount), getTodayProgress(), getDailyGoal(), resetDaily(). Implementar HydrationLog model: id, userId, amount, timestamp, glassSize. Calcular progreso como percentage: totalToday / dailyGoal * 100. Manejar timezone changes y reset automático daily a medianoche. Integrar con UserProfile para goal dinámico.

# Test Strategy:
Probar logging agua actualiza progreso correctamente, verificar reset diario funciona, validar cálculos precisos

# Subtasks:
## 1. Implementar modelo HydrationLog y esquema de base de datos [pending]
### Dependencies: None
### Description: Crear el modelo de datos HydrationLog con todos los campos necesarios para el tracking de hidratación
### Details:
Definir HydrationLog model con campos: id (String), userId (String), amount (double), timestamp (DateTime), glassSize (int). Configurar esquema en Isar database con indexes apropiados para queries por userId y timestamp. Implementar métodos de serialización/deserialización. Agregar validaciones para amount > 0 y glassSize válido (150-500ml). Configurar relación con UserProfile.

## 2. Desarrollar métodos core del HydrationService [pending]
### Dependencies: 17.1
### Description: Implementar la lógica principal del servicio de hidratación con todos los métodos requeridos
### Details:
Crear HydrationService con métodos: logWater(amount, glassSize) que persiste nuevo HydrationLog, getTodayProgress() que suma amount del día actual, getDailyGoal() que obtiene meta desde UserProfile, resetDaily() que limpia logs antiguos. Implementar cálculo de progreso como percentage: totalToday / dailyGoal * 100. Manejar timezone correctamente usando DateTime.now() local.

## 3. Implementar reset automático diario y integración con UserProfile [pending]
### Dependencies: 17.2
### Description: Configurar el sistema de reset automático nocturno y conectar con el perfil de usuario para metas dinámicas
### Details:
Implementar WorkManager job para reset diario a medianoche (00:00 local time). Crear listener para timezone changes que recalcula next reset time. Integrar con UserProfile para obtener dailyGoal dinámico basado en peso/actividad. Implementar background task que limpia logs antiguos (>30 días) para optimizar storage. Agregar notification opcional para recordatorio de hidratación.

